services:
  web:
    build:
      context: ./frontend
    container_name: ${ENVIRONMENT}_web
    networks:
      - app-network
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"

  server:
    build:
      context: ./server
    container_name: ${ENVIRONMENT}_server
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - app-network
    env_file:
      - ./server${ENV_PATH}
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./server:/app
    depends_on:
      - db

  telegram_bot:
    build:
      context: ./telegram
    container_name: ${ENVIRONMENT}_telegram_bot
    networks:
      - app-network
    env_file:
      - ./telegram/.env
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
    volumes:
      - ./telegram:/app

  nginx:
    image: nginx:latest
    container_name: ${ENVIRONMENT}_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./scripts/nginx.conf.prod:/etc/nginx/nginx.conf.prod
      - ./scripts/nginx.conf.dev:/etc/nginx/nginx.conf.dev
      - ./scripts/ssl:/etc/nginx/ssl
      - ./scripts/nginx_setup.sh:/nginx_setup.sh
    entrypoint: ["/nginx_setup.sh"]
    depends_on:
      - server
    networks:
      - app-network
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - SERVER_PORT=${SERVER_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}

  db:
    image: postgres:13
    container_name: ${ENVIRONMENT}_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres_data_${ENVIRONMENT}:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${ENVIRONMENT}_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge

  